[{"C:\\Users\\Admin\\quiz-app\\src\\index.js":"1","C:\\Users\\Admin\\quiz-app\\src\\serviceWorker.js":"2","C:\\Users\\Admin\\quiz-app\\src\\App.js":"3","C:\\Users\\Admin\\quiz-app\\src\\quizService\\index.js":"4","C:\\Users\\Admin\\quiz-app\\src\\partials\\header.js":"5","C:\\Users\\Admin\\quiz-app\\src\\components\\Popup.js":"6","C:\\Users\\Admin\\quiz-app\\src\\util\\Button.js":"7","C:\\Users\\Admin\\quiz-app\\src\\components\\Answer.js":"8"},{"size":226,"mtime":1608226848389,"results":"9","hashOfConfig":"10"},{"size":5481,"mtime":1608225413707,"results":"11","hashOfConfig":"10"},{"size":4349,"mtime":1608318962908,"results":"12","hashOfConfig":"10"},{"size":2438,"mtime":1608225989090,"results":"13","hashOfConfig":"10"},{"size":1097,"mtime":1608283212681,"results":"14","hashOfConfig":"10"},{"size":2325,"mtime":1608372753622,"results":"15","hashOfConfig":"10"},{"size":538,"mtime":1608282652276,"results":"16","hashOfConfig":"10"},{"size":2830,"mtime":1608316701766,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"hwj297",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},"C:\\Users\\Admin\\quiz-app\\src\\index.js",["39","40"],"import React,{ Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport QuizMania from './App';\r\n\r\n\r\nReactDOM.render(<QuizMania/>, document.getElementById(\"root\"));",["41","42"],"C:\\Users\\Admin\\quiz-app\\src\\serviceWorker.js",[],"C:\\Users\\Admin\\quiz-app\\src\\App.js",["43"],"import React,{ Component } from 'react';\r\nimport quizService from './quizService/index';\r\nimport Header from './partials/header';\r\nimport Popup from './components/Popup';\r\nimport Answers from './components/Answer';\r\nimport './assets/style.css'\r\n\r\nclass QuizMania extends Component {\r\n\r\n    state = {\r\n        count : 0,\r\n        questionBank : [],\r\n        score:0,\r\n        total : 5,\r\n        responses:0\r\n    }\r\n     getQuestions = () => {\r\n          quizService().then(questions => {\r\n             this.setState({questionBank  : questions},() => {\r\n                 console.log(this.state.questionBank[this.state.count])\r\n             })\r\n         })\r\n        }\r\n        \r\n     computeAnswer = (answer,correctAnswer) => {\r\n        if(answer === correctAnswer){\r\n\r\n           this.setState({score : this.state.score + 1});\r\n        }\r\n        this.setState({\r\n            responses : this.state.responses < 5 ? (this.state.responses + 1) : 5});\r\n    }\r\n     componentDidMount () {\r\n         this.getQuestions();\r\n         let count = this.state.count;\r\n         this.insertData(count);\r\n     }\r\n\r\n\r\n     insertData = (count) => {\r\n         console.log(this.state.questionBank);\r\n         quizService().then(questions => {\r\n            this.setState({questionBank  : questions},() => {\r\n                console.log(this.state.questionBank[this.state.count])\r\n                this.setState({\r\n                    question: this.state.questionBank[this.state.count].question,\r\n                    answers: [  this.state.questionBank[this.state.count].answers[0], \r\n                                this.state.questionBank[this.state.count].answers[1], \r\n                                this.state.questionBank[this.state.count].answers[2], \r\n                                this.state.questionBank[this.state.count].answers[3] \r\n                            ],\r\n                    correct: this.state.questionBank[count].correct,\r\n                    count: this.state.count + 1\r\n                });\r\n            })\r\n    })\r\n}\r\n\r\n\r\n     handleShowButton = () => {\r\n        this.setState({\r\n            showButton: true,\r\n            questionAnswered: true\r\n        })\r\n    }\r\n    \r\n    nextQuestion = () => {\r\n        let { count, total} = this.state;\r\n\r\n        if(count === total){\r\n            this.setState({\r\n                displayPopup: 'flex'\r\n            });\r\n        } else {\r\n            this.insertData(count);\r\n            this.setState({\r\n                showButton: false,\r\n                questionAnswered: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStartQuiz = () => {\r\n        this.setState({\r\n            displayPopup: 'none',\r\n            count: 1\r\n        });\r\n    }\r\n\r\n    handleIncreaseScore = () => {\r\n        this.setState({\r\n            score: this.state.score + 1\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        if (this.state.questionBank.length==0) {\r\n            return <div class=\"loader\">Loading...</div>;\r\n        }\r\n        let { count, total, question, answers, correct, showButton, questionAnswered, displayPopup, score} = this.state;\r\n        return (\r\n            <div>\r\n                 < Header />\r\n                <Popup style={{display: displayPopup}} \r\n             score={score} \r\n             total={total} \r\n             startQuiz={this.handleStartQuiz}\r\n        />\r\n               <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-10\">\r\n                <div id=\"question\">\r\n                    <h4 className=\"bg-light\">Question {count}/{total}</h4>\r\n                    <p>{question}</p>\r\n                </div>\r\n\r\n                <Answers \r\n                    answers={answers} \r\n                    correct={correct} \r\n                    showButton={this.handleShowButton} \r\n                    isAnswered={questionAnswered} \r\n                    increaseScore={this.handleIncreaseScore}\r\n                />\r\n\r\n                <div id=\"submit\">\r\n                    {showButton ? \r\n                    <button className=\"fancy-btn\" \r\n                            onClick={this.nextQuestion} >\r\n                    {count === total ? 'Finish quiz' : 'Next question'}\r\n                    </button> : <span></span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizMania;","C:\\Users\\Admin\\quiz-app\\src\\quizService\\index.js",["44"],"const qBank = [\n  {\n    question:\n      \"Virgin Trains, Virgin Atlantic and Virgin Racing, are all companies owned by which famous entrepreneur?   \",\n    answers: [\"Richard Branson\", \"Alan Sugar\", \"Donald Trump\", \"Bill Gates\"],\n    correct: \"Richard Branson\",\n    questionId: \"099099\"\n  },\n  {\n    question:\n      'Where is the train station \"Llanfair­pwllgwyngyll­gogery­chwyrn­drobwll­llan­tysilio­gogo­goch\"?',\n    answers: [\"Wales\", \"Moldova\", \"Czech Republic\", \"Denmark\"],\n    correct: \"Wales\",\n    questionId: \"183452\"\n  },\n  {\n    question:\n      \"Which company did Valve cooperate with in the creation of the Vive?\",\n    answers: [\"HTC\", \"Oculus\", \"Google\", \"Razer\"],\n    correct: \"HTC\",\n    questionId: \"267908\"\n  },\n  {\n    question: \"What's the name of Batman's  parents?\",\n    answers: [\n      \"Thomas & Martha\",\n      \"Joey & Jackie\",\n      \"Jason & Sarah\",\n      \"Todd & Mira\"\n    ],\n    correct: \"Thomas & Martha\",\n    questionId: \"333247\"\n  },\n  {\n    question: \"What is the most common surname Wales?\",\n    answers: [\"Jones\", \"Williams\", \"Davies\", \"Evans\"],\n    correct: \"Jones\",\n    questionId: \"496293\"\n  },\n  {\n    question:\n      \"What was the name of the WWF professional wrestling tag team made up of the wrestlers Ax and Smash?\",\n    answers: [\n      \"Demolition\",\n      \"The Dream Team\",\n      \"The Bushwhackers\",\n      \"The British Bulldogs\"\n    ],\n    correct: \"Demolition\",\n    questionId: \"588909\"\n  },\n  {\n    question:\n      'What name represents the letter \"M\" in the NATO phonetic alphabet?',\n    answers: [\"Mike\", \"Matthew\", \"Mark\", \"Max\"],\n    correct: \"Mike\",\n    questionId: \"648452\"\n  },\n  {\n    question: \"What is the first book of the Old Testament?\",\n    answers: [\"Genesis\", \"Exodus\", \"Leviticus\", \"Numbers\"],\n    correct: \"Genesis\",\n    questionId: \"786649\"\n  },\n  {\n    question:\n      \"In the video-game franchise Kingdom Hearts, the main protagonist, carries a weapon with what shape?\",\n    answers: [\"Key\", \"Sword\", \"Pen\", \"Cellphone\"],\n    correct: \"Key\",\n    questionId: \"839754\"\n  },\n  {\n    question:\n      \"Which best selling toy of 1983 caused hysteria, resulting in riots breaking out in stores?\",\n    answers: [\n      \"Cabbage Patch Kids\",\n      \"Transformers\",\n      \"Care Bears\",\n      \"Rubik’s Cube\"\n    ],\n    correct: \"Cabbage Patch Kids\",\n    questionId: \"98390\"\n  }\n];\n\nexport default (n = 5) =>\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n","C:\\Users\\Admin\\quiz-app\\src\\partials\\header.js",[],"C:\\Users\\Admin\\quiz-app\\src\\components\\Popup.js",[],"C:\\Users\\Admin\\quiz-app\\src\\util\\Button.js",[],"C:\\Users\\Admin\\quiz-app\\src\\components\\Answer.js",["45","46","47"],"import React, {Component} from 'react';\r\n\r\nclass Answers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isAnswered: false,\r\n            classNames: ['', '', '', '']\r\n        }\r\n        \r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n        this.clearClasses = this.clearClasses.bind(this);\r\n    }\r\n    \r\n    checkAnswer(e) {\r\n        let { isAnswered } = this.props;\r\n        \r\n        if(!isAnswered) {\r\n            let elem = e.currentTarget;\r\n            let { correct, increaseScore } = this.props;\r\n            let answer = Number(elem.dataset.id);\r\n            let updatedClassNames = this.state.classNames;\r\n\r\n            if(answer === correct){\r\n                updatedClassNames[answer-1] = 'right';\r\n                increaseScore();\r\n            }\r\n            else {\r\n                updatedClassNames[answer-1] = 'wrong';\r\n            }\r\n            \r\n            this.setState({\r\n                classNames: updatedClassNames,\r\n                \r\n            })\r\n\r\n            this.props.showButton();       \r\n            var myTime = setTimeout(() => {\r\n                this.clearClasses();\r\n                //console.log(\"IN SET Timeout\")\r\n            }, 5000);\r\n        }\r\n    }\r\n    clearClasses(){\r\n        this.setState({\r\n            classNames: ['', '', '', '']\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        let { answers } = this.props;\r\n        //let { classNames } = this.state.classNames;\r\n        \r\n        let transition = {\r\n            transitionName: \"example\",\r\n            transitionEnterTimeout: 500,\r\n            transitionLeaveTimeout: 300\r\n        }\r\n        if (!this.props.answers) {\r\n            return <div class=\"loader\">Loading...</div>;\r\n        }\r\n        return (\r\n            <div id=\"answers\">\r\n                <ul>\r\n                    <li onClick={this.checkAnswer} \r\n                        className={this.state.classNames[0]} data-id=\"1\">\r\n                    <span>A</span> \r\n                    <p>{this.props?.answers[0]}</p></li>\r\n\r\n                    <li onClick={this.checkAnswer} \r\n                        className={this.state.classNames[1]} data-id=\"2\">\r\n                    <span>B</span> \r\n                    <p>{this.props?.answers[1]}</p></li>\r\n\r\n                    <li onClick={this.checkAnswer} \r\n                        className={this.state.classNames[2]} data-id=\"3\">\r\n                    <span>C</span> \r\n                    <p>{this.props?.answers[2]}</p></li>\r\n\r\n                    <li onClick={this.checkAnswer} \r\n                        className={this.state.classNames[3]} data-id=\"4\">\r\n                    <span>D</span> \r\n                    <p>{this.props?.answers[3]}</p></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Answers;",{"ruleId":"48","severity":1,"message":"49","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":3,"column":13,"nodeType":"50","messageId":"51","endLine":3,"endColumn":26},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":99,"column":43,"nodeType":"59","messageId":"60","endLine":99,"endColumn":45},{"ruleId":"61","severity":1,"message":"62","line":86,"column":1,"nodeType":"63","endLine":87,"endColumn":70},{"ruleId":"48","severity":1,"message":"64","line":38,"column":17,"nodeType":"50","messageId":"51","endLine":38,"endColumn":23},{"ruleId":"48","severity":1,"message":"65","line":51,"column":15,"nodeType":"50","messageId":"51","endLine":51,"endColumn":22},{"ruleId":"48","severity":1,"message":"66","line":54,"column":13,"nodeType":"50","messageId":"51","endLine":54,"endColumn":23},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'serviceWorker' is defined but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'myTime' is assigned a value but never used.","'answers' is assigned a value but never used.","'transition' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
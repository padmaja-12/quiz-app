{"version":3,"sources":["serviceWorker.js","quizService/index.js","partials/header.js","util/Button.js","components/Popup.js","components/Answer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","qBank","question","answers","correct","questionId","n","Promise","resolve","sort","Math","random","slice","withStyles","root","flexGrow","menuButton","marginLeft","marginRight","color","backgroundColor","borderRadius","height","whiteColor","padding","props","classes","className","AppBar","position","Toolbar","variant","style","Typography","MyButton","Button","href","link","target","size","background","bck","margin","text","Popup","popupHandle","time","state","console","log","score","setState","title","total","buttonText","startQuiz","reload","createMarkup","__html","bind","nextProps","this","delay","dangerouslySetInnerHTML","onClick","Component","Answers","isAnswered","classNames","showGif","checkAnswer","clearClasses","e","right","elem","currentTarget","increaseScore","answer","dataset","id","updatedClassNames","showButton","setTimeout","alignContent","src","alt","textAlign","fontSize","fontWeight","data-id","class","QuizMania","count","questionBank","locading","responses","getQuestions","quizService","then","questions","computeAnswer","correctAnswer","insertData","handleShowButton","questionAnswered","nextQuestion","displayPopup","handleStartQuiz","handleIncreaseScore","length","loading","display","Answer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4be71a61.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","const qBank = [\r\n  {\r\n    question:\r\n      \"Virgin Trains, Virgin Atlantic and Virgin Racing, are all companies owned by which famous entrepreneur?   \",\r\n    answers: [\"Richard Branson\", \"Alan Sugar\", \"Donald Trump\", \"Bill Gates\"],\r\n    correct: \"1\",\r\n    questionId: \"099099\"\r\n  },\r\n  {\r\n    question:\r\n      'Where is the train station \"Llanfair­pwllgwyngyll­gogery­chwyrn­drobwll­llan­tysilio­gogo­goch\"?',\r\n    answers: [\"Wales\", \"Moldova\", \"Czech Republic\", \"Denmark\"],\r\n    correct: \"1\",\r\n    questionId: \"183452\"\r\n  },\r\n  {\r\n    question:\r\n      \"Which company did Valve cooperate with in the creation of the Vive?\",\r\n    answers: [\"HTC\", \"Oculus\", \"Google\", \"Razer\"],\r\n    correct: \"1\",\r\n    questionId: \"267908\"\r\n  },\r\n  {\r\n    question: \"What's the name of Batman's  parents?\",\r\n    answers: [\r\n      \"Thomas & Martha\",\r\n      \"Joey & Jackie\",\r\n      \"Jason & Sarah\",\r\n      \"Todd & Mira\"\r\n    ],\r\n    correct: \"1\",\r\n    questionId: \"333247\"\r\n  },\r\n  {\r\n    question: \"What is the most common surname Wales?\",\r\n    answers: [\"Jones\", \"Williams\", \"Davies\", \"Evans\"],\r\n    correct: \"1\",\r\n    questionId: \"496293\"\r\n  },\r\n  {\r\n    question:\r\n      \"What was the name of the WWF professional wrestling tag team made up of the wrestlers Ax and Smash?\",\r\n    answers: [\r\n      \"Demolition\",\r\n      \"The Dream Team\",\r\n      \"The Bushwhackers\",\r\n      \"The British Bulldogs\"\r\n    ],\r\n    correct: \"1\",\r\n    questionId: \"588909\"\r\n  },\r\n  {\r\n    question:\r\n      'What name represents the letter \"M\" in the NATO phonetic alphabet?',\r\n    answers: [\"Mike\", \"Matthew\", \"Mark\", \"Max\"],\r\n    correct: \"1\",\r\n    questionId: \"648452\"\r\n  },\r\n  {\r\n    question: \"What is the first book of the Old Testament?\",\r\n    answers: [\"Genesis\", \"Exodus\", \"Leviticus\", \"Numbers\"],\r\n    correct: \"1\",\r\n    questionId: \"786649\"\r\n  },\r\n  {\r\n    question:\r\n      \"In the video-game franchise Kingdom Hearts, the main protagonist, carries a weapon with what shape?\",\r\n    answers: [\"Key\", \"Sword\", \"Pen\", \"Cellphone\"],\r\n    correct: \"1\",\r\n    questionId: \"839754\"\r\n  },\r\n  {\r\n    question:\r\n      \"Which best selling toy of 1983 caused hysteria, resulting in riots breaking out in stores?\",\r\n    answers: [\r\n      \"Cabbage Patch Kids\",\r\n      \"Transformers\",\r\n      \"Care Bears\",\r\n      \"Rubik’s Cube\"\r\n    ],\r\n    correct: \"1\",\r\n    questionId: \"98390\"\r\n  }\r\n];\r\n\r\nexport default (n = 5) =>\r\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -18,\r\n    marginRight: 10,\r\n  },\r\n  color:{\r\n    backgroundColor: '#3c3c3c',\r\n    borderRadius : \"10px\",\r\n    height : \"4.5rem\"\r\n  },\r\n  whiteColor:{\r\n    color:'#fff',\r\n    padding : \"5px\"\r\n  }\r\n};\r\n\r\nfunction DenseAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.color}> \r\n        <Toolbar variant=\"dense\" style={{height : \"4.5rem\"}}>\r\n          <Typography variant=\"h6\" className={classes.whiteColor}>\r\n            QuizMania\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nDenseAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DenseAppBar);","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst MyButton = (props) => {\r\n    return (\r\n        <Button\r\n            href={props.link}\r\n            target={props.target}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            style={{\r\n                background: props.bck,\r\n                color: props.color,\r\n                margin: '20px',\r\n                padding: '10px',\r\n\r\n            }}\r\n        >\r\n        {props.text}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import React, { Component } from \"react\";\r\nimport MyButton from \"../util/Button\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nclass Popup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      time: \"start\",\r\n      title: \"Welcome to QuizMania\",\r\n      text: \"This is a quiz app made for fun.Happy playing!! <br /><br />\",\r\n      buttonText: \"Start the quiz\"\r\n    };\r\n\r\n    this.popupHandle = this.popupHandle.bind(this);\r\n  }\r\n\r\n  popupHandle = () => {\r\n    let { time } = this.state;\r\n    console.log(this.props.score);\r\n    if (time === \"start\") {\r\n      this.setState({\r\n        time: \"end\",\r\n        title: \"Congratulations!\",\r\n        text:\r\n          \"You have completed the quiz. <br /> You got: <strong>\" +\r\n          this.props.score +\r\n          \"</strong> out of <strong>\" +\r\n          this.props.total +\r\n          \"</strong> questions right.\",\r\n        buttonText: \"Restart\"\r\n      });\r\n\r\n      //alert(\"START THE QUIZ\");\r\n      this.props.startQuiz();\r\n    } else {\r\n      //alert(\"FINISHED QUIZ\");\r\n      window.location.reload(); // restart the application\r\n    }\r\n  };\r\n\r\n  createMarkup = (text) => {\r\n    return { __html: text };\r\n  };\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"From Popup:::::\", nextProps);\r\n    if (nextProps.total === 5) {\r\n      this.setState({\r\n        text:\r\n          \"You have completed the quiz. <br /> You got: <strong>\" +\r\n          this.props.score +\r\n          \"</strong> out of <strong>\" +\r\n          this.props.total +\r\n          \"</strong> questions right.\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { title, text, buttonText } = this.state;\r\n\r\n    let { style } = this.props;\r\n\r\n    return (\r\n      <Fade delay={500}>\r\n        <div className=\"popup-container\" style={style}>\r\n          <div className=\"container\">\r\n            <div>\r\n              <div className=\"popup\">\r\n                <h1>{title}</h1>\r\n                <p dangerouslySetInnerHTML={this.createMarkup(text)} />\r\n                <span onClick={this.popupHandle}>\r\n                  <MyButton text={buttonText} bck=\"#6200ffcb\" color=\"#fff\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Answers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAnswered: false,\r\n      classNames: [\"\", \"\", \"\", \"\"],\r\n      showGif: false\r\n    };\r\n\r\n    this.checkAnswer = this.checkAnswer.bind(this);\r\n    this.clearClasses = this.clearClasses.bind(this);\r\n  }\r\n\r\n  checkAnswer(e) {\r\n    let { isAnswered } = this.props;\r\n    //console.log(e.currentTarget.getElementById());\r\n    if (!isAnswered) {\r\n      let elem = e.currentTarget;\r\n      let right;\r\n      let { correct, increaseScore } = this.props;\r\n      let answer = elem.dataset.id;\r\n      let updatedClassNames = this.state.classNames;\r\n\r\n      if (answer === correct) {\r\n        updatedClassNames[answer - 1] = \"right\";\r\n        right = true;\r\n        increaseScore();\r\n      } else {\r\n        updatedClassNames[answer - 1] = \"wrong\";\r\n        right = false;\r\n      }\r\n\r\n      this.setState({\r\n        classNames: updatedClassNames,\r\n        showGif: right\r\n      });\r\n      this.props.showButton();\r\n      var myTime = setTimeout(() => {\r\n        this.clearClasses();\r\n        //console.log(\"IN SET Timeout\");\r\n      }, 2500);\r\n    }\r\n  }\r\n  clearClasses() {\r\n    this.setState({\r\n      classNames: [\"\", \"\", \"\", \"\"],\r\n      showGif: false\r\n    });\r\n  }\r\n  render() {\r\n    if (!this.props.answers) {\r\n      return <div class=\"loader\">Loading...</div>;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.showGif ? (\r\n          <div style={{ alignContent: \"center\" }}>\r\n            <img\r\n              src=\"https://i.pinimg.com/originals/a8/9b/5f/a89b5fe852d32184378c2e76d2403412.gif\"\r\n              alt=\"Claps\"\r\n            />\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: \"3rem\",\r\n                fontWeight: \"bold\"\r\n              }}\r\n            >\r\n              Great you got this right!!!\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div id=\"answers\">\r\n            <ul>\r\n              <li\r\n                onClick={this.checkAnswer}\r\n                className={this.state.classNames[0]}\r\n                data-id=\"1\"\r\n              >\r\n                <span>A</span>\r\n                <p>{this.props?.answers[0]}</p>\r\n              </li>\r\n\r\n              <li\r\n                onClick={this.checkAnswer}\r\n                className={this.state.classNames[1]}\r\n                data-id=\"2\"\r\n              >\r\n                <span>B</span>\r\n                <p>{this.props?.answers[1]}</p>\r\n              </li>\r\n\r\n              <li\r\n                onClick={this.checkAnswer}\r\n                className={this.state.classNames[2]}\r\n                data-id=\"3\"\r\n              >\r\n                <span>C</span>\r\n                <p>{this.props?.answers[2]}</p>\r\n              </li>\r\n\r\n              <li\r\n                onClick={this.checkAnswer}\r\n                className={this.state.classNames[3]}\r\n                data-id=\"4\"\r\n              >\r\n                <span>D</span>\r\n                <p>{this.props?.answers[3]}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Answers;\r\n","import React, { Component } from \"react\";\r\nimport quizService from \"./quizService/index\";\r\nimport Header from \"./partials/header\";\r\nimport Popup from \"./components/Popup\";\r\nimport Answers from \"./components/Answer\";\r\nimport \"./assets/style.css\";\r\n\r\nclass QuizMania extends Component {\r\n  state = {\r\n    count: 0,\r\n    questionBank: [],\r\n    locading: false,\r\n    score: 0,\r\n    total: 5,\r\n    responses: 0\r\n  };\r\n  getQuestions = () => {\r\n    quizService().then((questions) => {\r\n      this.setState({ questionBank: questions }, () => {\r\n        console.log(this.state.questionBank[this.state.count]);\r\n      });\r\n    });\r\n  };\r\n\r\n  computeAnswer = (answer, correctAnswer) => {\r\n    if (answer === correctAnswer) {\r\n      this.setState({ score: this.state.score + 1 });\r\n    }\r\n    this.setState({\r\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n    let count = this.state.count;\r\n    this.insertData(count);\r\n  }\r\n\r\n  insertData = (count) => {\r\n    //console.log(this.state.questionBank);\r\n    quizService().then((questions) => {\r\n      this.setState({ questionBank: questions }, () => {\r\n        console.log(this.state.questionBank[this.state.count]);\r\n        this.setState({\r\n          question: this.state.questionBank[this.state.count].question,\r\n          answers: [\r\n            this.state.questionBank[this.state.count].answers[0],\r\n            this.state.questionBank[this.state.count].answers[1],\r\n            this.state.questionBank[this.state.count].answers[2],\r\n            this.state.questionBank[this.state.count].answers[3]\r\n          ],\r\n          correct: this.state.questionBank[count].correct,\r\n          count: this.state.count + 1\r\n        });\r\n      });\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  handleShowButton = () => {\r\n    this.setState({\r\n      showButton: true,\r\n      questionAnswered: true\r\n    });\r\n  };\r\n\r\n  nextQuestion = () => {\r\n    let { count, total } = this.state;\r\n\r\n    if (count === total) {\r\n      this.setState({\r\n        displayPopup: \"flex\"\r\n      });\r\n    } else {\r\n      this.insertData(count);\r\n      this.setState({\r\n        showButton: false,\r\n        questionAnswered: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleStartQuiz = () => {\r\n    this.setState({\r\n      displayPopup: \"none\",\r\n      count: 1\r\n    });\r\n  };\r\n\r\n  handleIncreaseScore = () => {\r\n    this.setState(\r\n      {\r\n        score: this.state.score + 1\r\n      },\r\n      () => {\r\n        console.log(this.state.score);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.questionBank.length === 0 || this.state.loading) {\r\n      return <div class=\"loader\">Loading...</div>;\r\n    } else {\r\n      let {\r\n        count,\r\n        total,\r\n        question,\r\n        answers,\r\n        correct,\r\n        showButton,\r\n        questionAnswered,\r\n        displayPopup,\r\n        score\r\n      } = this.state;\r\n      return (\r\n        <div>\r\n          <Header />\r\n          <Popup\r\n            style={{ display: displayPopup }}\r\n            score={score}\r\n            total={count}\r\n            startQuiz={this.handleStartQuiz}\r\n          />\r\n          <div class=\"box\">\r\n            <div>\r\n              <div id=\"question\">\r\n                <h4 className=\"bg-light\">\r\n                  Question {count}/{total}\r\n                </h4>\r\n                <p>{question}</p>\r\n              </div>\r\n\r\n              <Answers\r\n                answers={this.state.answers}\r\n                correct={this.state.correct}\r\n                showButton={this.handleShowButton}\r\n                isAnswered={questionAnswered}\r\n                increaseScore={this.handleIncreaseScore}\r\n              />\r\n\r\n              <div id=\"submit\">\r\n                {showButton ? (\r\n                  <button className=\"fancy-btn\" onClick={this.nextQuestion}>\r\n                    {count === total ? \"Finish quiz\" : \"Next question\"}\r\n                  </button>\r\n                ) : (\r\n                  <span></span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuizMania;\r\n","import React,{ Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport QuizMania from './App';\r\n\r\n\r\nReactDOM.render(<QuizMania/>, document.getElementById(\"root\"));"],"sourceRoot":""}